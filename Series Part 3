class Series:
    def __init__(self, title, seasons, genres):
        """Initialize the series with the title, number of seasons, and genres."""
        self.title = title
        self.seasons = seasons
        self.genres = genres
        self.ratings = []  # Initialize an empty list to store ratings

    def rate(self, rating: int):
        """Add a rating between 0 and 5 to the series."""
        if 0 <= rating <= 5:
            self.ratings.append(rating)
        else:
            print("Invalid rating. Rating should be between 0 and 5.")

    def __str__(self):
        """Return a string representation of the series."""
        genre_string = ", ".join(self.genres)  # Join genres with a comma and a space
        
        if self.ratings:
            num_ratings = len(self.ratings)
            average_rating = sum(self.ratings) / num_ratings
            return f"{self.title} ({self.seasons} seasons)\ngenres: {genre_string}\n{num_ratings} ratings, average {average_rating:.1f} points"
        else:
            return f"{self.title} ({self.seasons} seasons)\ngenres: {genre_string}\nno ratings"

# Function to filter series with a rating greater than or equal to the specified minimum rating
def minimum_grade(rating: float, series_list: list):
    return [series for series in series_list if series.ratings and sum(series.ratings) / len(series.ratings) >= rating]

# Function to filter series that include the specified genre
def includes_genre(genre: str, series_list: list):
    return [series for series in series_list if genre in series.genres]

# Usage example:

# Creating some series objects
s1 = Series("Dexter", 8, ["Crime", "Drama", "Mystery", "Thriller"])
s1.rate(5)

s2 = Series("South Park", 24, ["Animation", "Comedy"])
s2.rate(3)

s3 = Series("Friends", 10, ["Romance", "Comedy"])
s3.rate(2)

# List of series
series_list = [s1, s2, s3]

# Filtering series based on rating and genre
print("a minimum rating of 4.5:")
for series in minimum_grade(4.5, series_list):
    print(series.title)

print("genre Comedy:")
for series in includes_genre("Comedy", series_list):
    print(series.title)
